% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Chao.R, R/Hurdleztgeom.R, R/Hurdleztpoisson.R,
%   R/modelHelp.R, R/oiztgeom.R, R/oiztpoisson.R, R/zelterman.R, R/zotgeom.R,
%   R/zotnegbin.R, R/zotpoisson.R, R/ztHurdlegeom.R, R/ztHurdlepoisson.R,
%   R/ztgeom.R, R/ztnegbin.R, R/ztoigeom.R, R/ztoipoisson.R, R/ztpoisson.R
\name{chao}
\alias{chao}
\alias{Hurdleztgeom}
\alias{Hurdleztpoisson}
\alias{singleRmodels}
\alias{oiztgeom}
\alias{oiztpoisson}
\alias{zelterman}
\alias{zotgeom}
\alias{zotnegbin}
\alias{zotpoisson}
\alias{ztHurdlegeom}
\alias{ztHurdlepoisson}
\alias{ztgeom}
\alias{ztnegbin}
\alias{ztoigeom}
\alias{ztoipoisson}
\alias{ztpoisson}
\title{Family functions in singleRcapture package}
\usage{
chao(...)

Hurdleztgeom(...)

Hurdleztpoisson(...)

oiztgeom(...)

oiztpoisson(...)

zelterman(...)

zotgeom(...)

zotnegbin(nSim = 1000, epsSim = 1e-08, ...)

zotpoisson(...)

ztHurdlegeom(...)

ztHurdlepoisson(...)

ztgeom(...)

ztnegbin(nSim = 1000, epsSim = 1e-08, ...)

ztoigeom(...)

ztoipoisson(...)

ztpoisson(...)
}
\arguments{
\item{...}{Additional arguments, not used for now.}

\item{nSim}{If working weights cannot be computed analytically this argument
specifies maximum number of simulations allowed to find them numerically.}

\item{epsSim}{f working weights cannot be computed analytically this argument
specifies precision level for finding them numerically.}
}
\value{
A object of class \code{family} containing objects:
\itemize{
\item \code{makeMinusLogLike, makeGradient, makeHessian} -- A factory functions for creating
\mjeqn{\ell(\boldsymbol{\beta}), \frac{\partial\ell}{\partial\boldsymbol{\beta}},
\frac{\partial^{2}\ell}{\partial\boldsymbol{\beta}^{T}\partial\boldsymbol{\beta}}
}{l(beta), dl/dbeta, d^2l/dbeta^Tdbeta} functions respectively from
\mjeqn{\boldsymbol{y}}{y} vector and \mjeqn{\boldsymbol{X}_{vlm}}{X_vlm}
(or just \mjeqn{\boldsymbol{X}}{X} if applied to model with single linear predictor).
\item \code{linkfun, linkinv} -- A link function and its inverse.
\item \code{mu.eta, variance} -- Functions of linear predictors that
return expected value and variance. There is a \code{type} argument with
2 possible values \code{"trunc"} and \code{"nontrunc"} that specifies whether
to return \mjeqn{\mathbb{E}(Y|Y>0), \text{var}(Y|Y>0}{E(Y|Y>0), var(Y|Y>0)}
or \mjeqn{\mathbb{E}Y, \text{var}(Y)}{E(Y), var(Y)} respectively.
\item \code{link, family} -- Character specifying link functions used for the
model and the internally used name of the model.
\item \code{valideta, validmu} -- For now only returns true. In near future
will be used to check whether applied linear predictors are valid (i.e. are
transormed into some elements of parameter space the subjected to inverse
link function).
\item \code{funcZ, Wfun} -- Functions that create pseudo residuals and
working weights used in IRLS algorithm.
\item \code{devResids} -- Function that given the linear predictors
prior weights vector and response vector returns deviance residuals.
Not all family functions have these functions implemented yet.
\item \code{pointEst, popVar} -- Functions that given prior weights
linear predictors and in the later case also estimation of
\mjeqn{\text{cov}(\hat{\boldsymbol{\beta}})}{cov(beta)}
and \mjeqn{\boldsymbol{X_vlm}}{X_vlm} matrix return point estimate
for population size and analytic estimation of its variance.
There is a additional boolean parameter \code{contr} in the former
function that if set to true returns contribution of each unit.
\item \code{etaNames, parNum} -- Names and number of linear predictors.
\item \code{densityFunction} -- A function that given linear predictors
returns value of PMF at values \code{x}. Additional argument \code{type}
spedifies whether to return \mjeqn{\mathbb{P}(Y|Y>0)}{P(Y|Y>0)} or
\mjeqn{\mathbb{P}(Y)}{P(Y)}.
\item \code{simulate} -- A function that generates values of dependent
vector given linear predictors.
}
}
\description{
Package \code{singleRcapture} utilises various family type
functions that specify variable parts of population size estimation,
regression, diagnostics and other necessary information that depends
on the model. These functions are used as \code{model} argument in
\code{estimatePopsize} function.
}
\details{
\loadmathjax

Most of these functions are based on some "base" distribution with
support \mjeqn{\mathbb{N}_{0}=\mathbb{N}\cup\{0\}}{N_0} that describe
distribution of \mjeqn{Y}{Y} before truncation. Currently they include:
\mjdeqn{\mathbb{P}(Y=y|\lambda,\alpha)=\left\lbrace
\begin{array}{cc}
\frac{\lambda^{y}e^{-\lambda}}{y!}    & \text{poisson distribution}  \cr
\frac{\Gamma(y+\alpha^{-1})}{\Gamma(\alpha^{-1})y!} 
\left(\frac{\alpha^{-1}}{\alpha^{-1}+\lambda}\right)^{\alpha^{-1}}
\left(\frac{\lambda}{\alpha^{-1}+\lambda}\right)^{y} & 
\text{negative binomial distribution} \cr
\frac{\lambda^{y}}{(1+\lambda)^{y+1}} & 
\text{geometric distribution}
\end{array}
\right.}{How?}
where \mjeqn{\lambda}{lambda} is the poisson parameter and
\mjeqn{\alpha}{alpha} is the dispersion parameter. Geometric distribution
is a special case of negative binomial distribution when
\mjeqn{\alpha=1}{alpha=1} it is included because negative binomial
distribution is quite troublesome numerical regression in fitting.
It is important to know that PMF of negative binomial distribution
approaches the PMF of poisson distribution when
\mjeqn{\alpha\rightarrow 0^{+}}{alpha -> 0^+}.

\strong{Note} in literature on single source capture recapture models
the dispersion parameter which introduces greater variability
in negative binomial distribution compared to poisson distribution is
generally interpreted as explaining the \emph{unobserved} heterogeneity
i.e. presence of important unobserved independent variables.
All these methods for estimating population size are tied to poisson
processes hence we use \mjeqn{\lambda}{lambda} as parameter symbol
instead of \mjeqn{\mu}{mu} to emphasize this connection.
Also will not be hard to see that \strong{all} estimators derived from
modifying the "base" distribution are unbiased if assumptions
made by respective models are not violated.

The \strong{zero truncated} models corresponding to "base" distributions are
characterised by relation:
\mjdeqn{\mathbb{P}(Y=y|Y>0)=\left\lbrace
\begin{array}{cc}
\frac{\mathbb{P}(Y=y)}{1-\mathbb{P}(Y=0)} & \text{when }y\neq 0 \cr
0 & \text{when }y=0
\end{array}\right.}{}
which allows us to estimate parameter values using only observed part of
population. These models lead to the following estimates:
\mjdeqn{
\begin{aligned}
\hat{N} &= \sum_{k=1}^{N_{obs}}\frac{1}{1-\exp(-\lambda_{k})} &\text{ For poisson distribution} \cr
\hat{N} &= \sum_{k=1}^{N_{obs}}\frac{1}{1-(1+\\alpha_{k}\lambda_{k})^{-\alpha_{k}^{-1}}} &\text{ For negative binomial distribution} \cr
\hat{N} &= \sum_{k=1}^{N_{obs}}\frac{1+\lambda_{k}}{\lambda_{k}} &\text{ For geometric distribution}
\end{aligned}
}{}

One common way in which assumptions of zero truncated models are violated is
presence of \strong{one inflation} the presence of which is somewhat similar in
single source capture-recapture models to zero inflation in usual count data
analysis. There are two ways in which one inflation may be understood,
they relate to whether \mjeqn{\mathbb{P}(Y=0)}{P(Y=0)} is modified by
inflation. The first approach is inflate (\mjeqn{\omega}{omega} parameter)
zero truncated distribution as:
\mjdeqn{
\mathbb{P}_{new}(Y=y|Y>0) = \left\lbrace\begin{array}{cc}
\omega + (1 - \omega)\mathbb{P}_{old}(Y=1|Y>0)& \text{when: } y = 1 \cr
(1 - \omega) \mathbb{P}_{old}(Y=y|Y>0) & \text{when: } y \neq 1
\end{array}\right.
}{}
which corresponds to:
\mjdeqn{
\mathbb{P}_{new}(Y=y) = \left\lbrace\begin{array}{cc}
\mathbb{P}_{old}(Y=0) & \text{when: } y = 0 \cr
\omega(1 - \mathbb{P}(Y=0)) + (1 - \omega)\mathbb{P}_{old}(Y=1) & \text{when: } y = 1 \cr
(1 - \omega) \mathbb{P}_{old}(Y=y) & \text{when: } y > 1
\end{array}\right.
}{}
before zero truncation. Models that utilise this
approach are commonly referred to as \emph{zero truncated one inflated models}.
Another way of accommodating one inflation in SSCR is by putting inflation
parameter on base distribution as:
\mjdeqn{
\mathbb{P}_{new}(Y=y) = \left\lbrace\begin{array}{cc}
\omega + (1 - \omega)\mathbb{P}_{old}(Y=1)& \text{when: } y = 1 \cr
(1 - \omega) \mathbb{P}_{old}(Y=y) & \text{when: } y \neq 1
\end{array}\right.
}{}
wchich them becomes:
\mjdeqn{
\mathbb{P}_{new}(Y=y|Y>0) = \left\lbrace\begin{array}{cc}
\frac{\omega}{1 - (1-\omega)\mathbb{P}_{old}(Y=0)} + \frac{(1 - \omega)}{1 - (1-\omega)\mathbb{P}_{old}(Y=0)}\mathbb{P}_{old}(Y=1)& \text{when: } y = 1 \cr
\frac{(1 - \omega)}{1 - (1-\omega)\mathbb{P}_{old}(Y=0)}\mathbb{P}_{old}(Y=y) & \text{when: } y > 1
\end{array}\right.
}{}
after truncation.
It was shown by BÃ¶hning in 2022 paper that these approaches are equivalent
in terms of maximising likelihoods if we do not put formula on \mjeqn{\omega}{omega}.
They can however lead to different population size estimates.

For \emph{zero truncated one inflated models} the formula for population size
estimate \mjeqn{\hat{N}}{N} does not change since
\mjeqn{\mathbb{P}(y=0)}{P(Y=0)} remains the same but estimation of parameters
changes all calculations.

For \emph{one inflated zero truncated models} population size estimates are expressed by:
\mjdeqn{
\begin{aligned}
\hat{N} &= \sum_{k=1}^{N_{obs}}\frac{1}{1-(1-\omega_{k})\exp(-\lambda_{k})} &\text{ For base poisson distribution} \cr
\hat{N} &= \sum_{k=1}^{N_{obs}}\frac{1}{1-(1-\omega_{k})(1+\\alpha_{k}\lambda_{k})^{-\alpha_{k}^{-1}}} &\text{ For base negative binomial distribution} \cr
\hat{N} &= \sum_{k=1}^{N_{obs}}\frac{1+\lambda_{k}}{\lambda_{k} + \omega_{k}} &\text{ For base geometric distribution}
\end{aligned}
}{}

\strong{Zero one truncated} models ignore one counts instead of accommodating
one inflation by utilising the identity
\mjdeqn{
\ell_{\text{ztoi}}=\boldsymbol{f}_{1}\ln{\frac{\boldsymbol{f}_{1}}{N_{obs}}}
+(N_{obs}-\boldsymbol{f}_{1})\ln{\left(1-\frac{\boldsymbol{f}_{1}}{N_{obs}}
\right)} + \ell_{\text{zot}}
}{}
where \mjeqn{\ell_{\text{zot}}}{} is the log likelihood of zero one truncated
distribution characterised by probability mass function:
\mjdeqn{\mathbb{P}(Y=y|Y>1)=\left\lbrace
\begin{array}{cc}
\frac{\mathbb{P}(Y=y)}{1-\mathbb{P}(Y=0)-\mathbb{P}(Y=1)} & \text{when }y > 1 \cr
0 & \text{when }y\in\lbrace 0, 1\rbrace
\end{array}\right.}{}
where \mjeqn{\mathbb{P}(Y)}{} is the probability mass function of the "base"
distribution. The identity above justifies use of zero one truncated,
unfortunately it was only proven for intercept only models, however
numerical simulations seem to indicate that even if the theorem cannot be
extended for (non trivial) regression population size estimation is still
possible.

For \emph{zero one truncated models} population size estimates are expressed by:
\mjdeqn{
\begin{aligned}
\hat{N} &= \boldsymbol{f}_{1} + \sum_{k=1}^{N_{obs}}\frac{1-\lambda_{k}\exp(-\lambda_{k})}{1-\exp(-\lambda_{k})-\lambda_{k}\exp(-\lambda_{k})} &\text{ For base poisson distribution} \cr
\hat{N} &= \boldsymbol{f}_{1} + \sum_{k=1}^{N_{obs}}\frac{1-\lambda_{k}(1+\alpha_{k}\lambda_{k})^{-1-\alpha_{k}^{-1}}}{1-(1+\alpha_{k}\lambda_{k})^{-\alpha_{k}^{-1}}-\lambda_{k}(1+\alpha_{k}\lambda_{k})^{-1-\alpha_{k}^{-1}}} &\text{ For base negative binomial distribution} \cr
\hat{N} &= \boldsymbol{f}_{1} + \sum_{k=1}^{N_{obs}}\frac{\lambda_{k}^{2}+\lambda_{k}+1}{\lambda_{k}^{2}} &\text{ For base geometric distribution}
\end{aligned}
}{}

Pseudo hurdle models are experimental and not yet described in literature.

Lastly there are \strong{chao} and \strong{zelterman} models which are based on
logistic regression on the dummy variable
\mjdeqn{
Z = \left\lbrace\begin{array}{cc}
0     & \text{if }Y = 1  \cr
1     & \text{if }Y = 2
\end{array}\right.}{}
based on the equation:
\mjdeqn{
\text{logit}(p_{k})=
\ln\left(\frac{\lambda_{k}}{2}\right)=
\boldsymbol{\beta}\mathbf{x}_{k}=\eta_{k}}{}
where \mjeqn{\lambda_{k}}{} is the poisson parameter.

The \emph{zelterman} estimator of population size is expressed as:
\mjdeqn{
\hat{N}=\sum_{k=1}^{N_{obs}}{1-\exp\left(-\lambda_{k}\right)}
}{}
and \emph{chao} estimator has the form:
\mjdeqn{
\hat{N}=N_{obs}+\sum_{k=1}^{\boldsymbol{f}_{1}+\boldsymbol{f}_{2}}
\frac{1}{\lambda_{k}+ \frac{\lambda_{k}^{2}}{2}}
}{}
}
\seealso{
\code{\link[=estimatePopsize]{estimatePopsize()}}
}
\author{
Piotr Chlebicki, Maciej BerÄsewicz
}
