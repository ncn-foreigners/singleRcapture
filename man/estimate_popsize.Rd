% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SingleRmodel.R
\name{estimate_popsize}
\alias{estimate_popsize}
\title{estimate_popsize}
\usage{
estimate_popsize(
  formula,
  data,
  model = c("ztpoisson", "ztnegbin", "ztgeom", "zotpoisson", "ztoipoisson",
    "zotnegbin", "ztoinegbin", "zotgeom", "ztoigeom", "zelterman", "chao"),
  weights = 1,
  subset = NULL,
  na.action = NULL,
  method = c("mle", "robust"),
  pop.var = c("analytic", "bootstrap"),
  control.method = NULL,
  control.model = NULL,
  control.pop.var = NULL,
  modelFrame = FALSE,
  x = TRUE,
  y = TRUE,
  contrasts = NULL,
  ...
)
}
\arguments{
\item{formula}{Description of model to that is supposed to be fitted}

\item{data}{Data frame for the regression}

\item{model}{Model for regression and population estimate}

\item{weights}{Optional object of prior weights used in fitting the model}

\item{subset}{A logical vector indicating which observations should be used in regression and population size estimation}

\item{na.action}{TODO}

\item{method}{Method for fitting values currently supported robust (IRLS) and MaxLikelihood}

\item{pop.var}{A method of constructing confidence interval either analytic or bootstrap
where bootstraped confidence interval may either be based on 2.5\%-97.5\%
percientiles ("bootstrapPerc") or studentized CI ("bootstrapSD")}

\item{control.method}{A list indicating parameter to use in population size variance estimation may be constructed with singleRcapture::control.method function}

\item{control.model}{||}

\item{control.pop.var}{A list indicating parameter to use in population size variance estimation may be constructed with singleRcapture::control.pop.var function}

\item{modelFrame, x, y}{logical value indicating whether to return model matrix, dependent vector and model matrix as a part of output}

\item{contrasts}{Not yet implemented}

\item{...}{Arguments to be passed to other methods}
}
\value{
Returns an object of classes inherited from glm containing:\cr

\itemize{
\item{y -- Vector of dependent variable if specified at function call.}
\item{X -- Model matrix if specified at function call.}
\item{formula -- Formula provided on call.}
\item{call -- Call matching original input.}
\item{coefficients -- A vector of fitted coefficients of regression.}
\item{control -- A list of control parameters for control.method and control.model, control.pop.var is included in populationSize.}
\item{null.deviance TODO}
\item{model -- Model which estimation of population size and regression was built, object of class family.}
\item{aic -- Akaike information criterion.}
\item{bic -- Bayesian information criterion.}
\item{deviance -- Deviance for the model.}
\item{prior.weights -- Prior weight provided on call.}
\item{weights -- If robust method of estimation was chosen weights returned by IRLS, otherwise same as prior.weights.}
\item{residuals -- Vector of raw residuals.}
\item{logL -- Logarithm likelihood obtained at final iteration.}
\item{iter -- Numbers of iterations performed in fitting or if stats::optim was used number of call to loglikelihhod function.}
\item{dispersion -- Dispersion parameter if applies.}
\item{df.residuals -- Residual degrees of freedom.}
\item{df.null -- Null degrees of freedom.}
\item{fitt.values -- Data frame of fitted values for both mu (the expected value) and lambda (Poisson parameter).}
\item{populationSize -- a list containing information of population size estimate.}
\item{modelFrame -- Model frame if specified at call.}
\item{linear predictors -- vector of fitted linear predictors.}
\item{trcount -- Number of truncated observations.}
\item{sizeObserved -- Number of observations in original model frame.}
\item{terms -- terms object used.}
\item{contrasts -- contrasts specified in function call.}
\item{na.aciton -- na.action used.}
}
}
\description{
estimate_popsize
}
\seealso{
\code{\link[stats:optim]{stats::optim()}} \code{\link[=control.method]{control.method()}} \code{\link[=control.pop.var]{control.pop.var()}} \code{\link[=control.model]{control.model()}} \code{\link[=estimate_popsize.fit]{estimate_popsize.fit()}}
}
